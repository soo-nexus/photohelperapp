import { client as r } from "./webchat-client4.js";
const a = (e) => (e.client ?? r).delete({
  url: "/conversations/{id}",
  ...e
}), c = (e) => (e.client ?? r).get({
  url: "/conversations/{id}",
  ...e
}), n = (e) => (e.client ?? r).get({
  url: "/conversations",
  ...e
}), l = (e) => (e.client ?? r).post({
  url: "/conversations",
  ...e,
  headers: {
    "Content-Type": "application/json",
    ...e == null ? void 0 : e.headers
  }
}), s = (e) => (e.client ?? r).get({
  url: "/conversations/{id}/messages",
  ...e
}), u = (e) => (e.client ?? r).get({
  url: "/conversations/{id}/participants",
  ...e
}), d = (e) => (e.client ?? r).post({
  url: "/conversations/{id}/participants",
  ...e,
  headers: {
    "Content-Type": "application/json",
    ...e == null ? void 0 : e.headers
  }
}), g = (e) => (e.client ?? r).delete({
  url: "/conversations/{id}/participants/{userId}",
  ...e
}), i = (e) => (e.client ?? r).get({
  url: "/conversations/{id}/participants/{userId}",
  ...e
}), v = (e) => (e.client ?? r).delete({
  url: "/messages/{id}",
  ...e
}), h = (e) => (e.client ?? r).get({
  url: "/messages/{id}",
  ...e
}), C = (e) => (e.client ?? r).put({
  url: "/messages/{id}",
  ...e,
  headers: {
    "Content-Type": "application/json",
    ...e == null ? void 0 : e.headers
  }
}), m = (e) => (e.client ?? r).post({
  url: "/messages",
  ...e,
  headers: {
    "Content-Type": "application/json",
    ...e == null ? void 0 : e.headers
  }
}), j = (e) => (e.client ?? r).delete({
  url: "/users/me",
  ...e
}), y = (e) => (e.client ?? r).get({
  url: "/users/me",
  ...e
}), T = (e) => (e.client ?? r).put({
  url: "/users/me",
  ...e,
  headers: {
    "Content-Type": "application/json",
    ...e == null ? void 0 : e.headers
  }
}), M = (e) => ((e == null ? void 0 : e.client) ?? r).post({
  url: "/users",
  ...e,
  headers: {
    "Content-Type": "application/json",
    ...e == null ? void 0 : e.headers
  }
}), P = (e) => (e.client ?? r).get({
  url: "/events/{id}",
  ...e
}), U = (e) => (e.client ?? r).post({
  url: "/events",
  ...e,
  headers: {
    "Content-Type": "application/json",
    ...e == null ? void 0 : e.headers
  }
}), f = (e) => (e.client ?? r).post({
  url: "/files",
  ...e,
  headers: {
    "Content-Type": "application/json",
    ...e == null ? void 0 : e.headers
  }
});
export {
  d as addParticipant,
  l as createConversation,
  U as createEvent,
  f as createFile,
  m as createMessage,
  M as createUser,
  a as deleteConversation,
  v as deleteMessage,
  j as deleteUser,
  c as getConversation,
  P as getEvent,
  h as getMessage,
  i as getParticipant,
  y as getUser,
  s as listConversationMessages,
  n as listConversations,
  u as listParticipants,
  g as removeParticipant,
  C as updateMessage,
  T as updateUser
};
