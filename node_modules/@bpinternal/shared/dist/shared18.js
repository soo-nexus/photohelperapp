import { timeObject as f, isInteger as m, integerBetween as d, weeksInWeekYear as y, daysInYear as u, daysInMonth as g, isLeapYear as k } from "./shared13.js";
import O from "./shared21.js";
const w = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334], h = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];
function o(e, n) {
  return new O(
    "unit out of range",
    `you specified ${n} (of type ${typeof n}) as a ${e}, which is invalid`
  );
}
function v(e, n, r) {
  const a = new Date(Date.UTC(e, n - 1, r));
  e < 100 && e >= 0 && a.setUTCFullYear(a.getUTCFullYear() - 1900);
  const t = a.getUTCDay();
  return t === 0 ? 7 : t;
}
function Y(e, n, r) {
  return r + (k(e) ? h : w)[n - 1];
}
function p(e, n) {
  const r = k(e) ? h : w, a = r.findIndex((s) => s < n), t = n - r[a];
  return { month: a + 1, day: t };
}
function W(e) {
  const { year: n, month: r, day: a } = e, t = Y(n, r, a), s = v(n, r, a);
  let l = Math.floor((t - s + 10) / 7), i;
  return l < 1 ? (i = n - 1, l = y(i)) : l > y(n) ? (i = n + 1, l = 1) : i = n, { weekYear: i, weekNumber: l, weekday: s, ...f(e) };
}
function M(e) {
  const { weekYear: n, weekNumber: r, weekday: a } = e, t = v(n, 1, 4), s = u(n);
  let l = r * 7 + a - t - 3, i;
  l < 1 ? (i = n - 1, l += u(i)) : l > s ? (i = n + 1, l -= u(n)) : i = n;
  const { month: c, day: I } = p(i, l);
  return { year: i, month: c, day: I, ...f(e) };
}
function C(e) {
  const { year: n, month: r, day: a } = e, t = Y(n, r, a);
  return { year: n, ordinal: t, ...f(e) };
}
function L(e) {
  const { year: n, ordinal: r } = e, { month: a, day: t } = p(n, r);
  return { year: n, month: a, day: t, ...f(e) };
}
function U(e) {
  const n = m(e.weekYear), r = d(e.weekNumber, 1, y(e.weekYear)), a = d(e.weekday, 1, 7);
  return n ? r ? a ? !1 : o("weekday", e.weekday) : o("week", e.week) : o("weekYear", e.weekYear);
}
function G(e) {
  const n = m(e.year), r = d(e.ordinal, 1, u(e.year));
  return n ? r ? !1 : o("ordinal", e.ordinal) : o("year", e.year);
}
function N(e) {
  const n = m(e.year), r = d(e.month, 1, 12), a = d(e.day, 1, g(e.year, e.month));
  return n ? r ? a ? !1 : o("day", e.day) : o("month", e.month) : o("year", e.year);
}
function $(e) {
  const { hour: n, minute: r, second: a, millisecond: t } = e, s = d(n, 0, 23) || n === 24 && r === 0 && a === 0 && t === 0, l = d(r, 0, 59), i = d(a, 0, 59), c = d(t, 0, 999);
  return s ? l ? i ? c ? !1 : o("millisecond", t) : o("second", a) : o("minute", r) : o("hour", n);
}
export {
  C as gregorianToOrdinal,
  W as gregorianToWeek,
  N as hasInvalidGregorianData,
  G as hasInvalidOrdinalData,
  $ as hasInvalidTimeData,
  U as hasInvalidWeekData,
  L as ordinalToGregorian,
  M as weekToGregorian
};
