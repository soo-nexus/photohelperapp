import u from "./shared6.js";
function h(s, f) {
  const o = (i) => i.toUTC(0, { keepLocalTime: !0 }).startOf("day").valueOf(), l = o(f) - o(s);
  return Math.floor(u.fromMillis(l).as("days"));
}
function c(s, f, o) {
  const l = [
    ["years", (e, t) => t.year - e.year],
    ["quarters", (e, t) => t.quarter - e.quarter],
    ["months", (e, t) => t.month - e.month + (t.year - e.year) * 12],
    [
      "weeks",
      (e, t) => {
        const r = h(e, t);
        return (r - r % 7) / 7;
      }
    ],
    ["days", h]
  ], i = {};
  let a, n;
  for (const [e, t] of l)
    if (o.indexOf(e) >= 0) {
      a = e;
      let r = t(s, f);
      n = s.plus({ [e]: r }), n > f ? (s = s.plus({ [e]: r - 1 }), r -= 1) : s = n, i[e] = r;
    }
  return [s, i, n, a];
}
function O(s, f, o, l) {
  let [i, a, n, e] = c(s, f, o);
  const t = f - i, r = o.filter(
    (m) => ["hours", "minutes", "seconds", "milliseconds"].indexOf(m) >= 0
  );
  r.length === 0 && (n < f && (n = i.plus({ [e]: 1 })), n !== i && (a[e] = (a[e] || 0) + t / (n - i)));
  const d = u.fromObject(a, l);
  return r.length > 0 ? u.fromMillis(t, l).shiftTo(...r).plus(d) : d;
}
export {
  O as default
};
