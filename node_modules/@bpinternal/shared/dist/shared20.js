class e extends Error {
}
class t extends e {
  constructor(s) {
    super(`Invalid DateTime: ${s.toMessage()}`);
  }
}
class n extends e {
  constructor(s) {
    super(`Invalid Interval: ${s.toMessage()}`);
  }
}
class a extends e {
  constructor(s) {
    super(`Invalid Duration: ${s.toMessage()}`);
  }
}
class o extends e {
}
class c extends e {
  constructor(s) {
    super(`Invalid unit ${s}`);
  }
}
class i extends e {
}
class l extends e {
  constructor() {
    super("Zone is an abstract class");
  }
}
export {
  o as ConflictingSpecificationError,
  i as InvalidArgumentError,
  t as InvalidDateTimeError,
  a as InvalidDurationError,
  n as InvalidIntervalError,
  c as InvalidUnitError,
  l as ZoneIsAbstractError
};
